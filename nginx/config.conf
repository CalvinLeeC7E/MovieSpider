upstream movie_spider_puma {
  server 172.26.127.173:8082;
}

server {
  listen 80;
  server_name localhost;

  keepalive_timeout 5;
  client_max_body_size 38M;
  root /webapp/moviespider;

  access_log /webapp/moviespider/nginx/log/nginx.access.log;
  error_log /webapp/moviespider/nginx/log/nginx.error.log;

  if (-f $document_root/maintenance.html) {
    rewrite  ^(.*)$  /maintenance.html last;
    break;
  }


  location ~ ^/(assets)/  {
    # root /webapp/moviespider/public;
    gzip_static on;
    # Per RFC2616 - 1 year maximum expiry
    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;

    if (-f $request_filename) {
      break;
    }

    if (-f $request_filename/index.html) {
      rewrite (.*) $1/index.html break;
    }

    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }

    if (!-f $request_filename) {
      proxy_pass http://movie_spider_puma;
      break;
    }
  }



  # Now this supposedly should work as it gets the filenames
  # with querystrings that Rails provides.
  # BUT there's a chance it could break the ajax calls.
  location ~* \.(ico|css|gif|jpe?g|png)(\?[0-9]+)?$ {
     expires max;
     break;
  }

  location ~ ^/javascripts/.*\.js(\?[0-9]+)?$ {
     expires max;
     break;
  }

  # Error pages
  # error_page 500 502 503 504 /500.html;
  location = /500.html {
    root /webapp/moviespider/public;
  }
}